State 30 conflicts: 14 shift/reduce
State 31 conflicts: 14 shift/reduce
State 36 conflicts: 1 reduce/reduce
State 38 conflicts: 1 reduce/reduce
State 44 conflicts: 14 shift/reduce
State 46 conflicts: 36 reduce/reduce
State 50 conflicts: 1 shift/reduce, 1 reduce/reduce
State 51 conflicts: 1 shift/reduce, 1 reduce/reduce
State 52 conflicts: 2 shift/reduce
State 94 conflicts: 9 shift/reduce
State 95 conflicts: 9 shift/reduce
State 102 conflicts: 14 shift/reduce
State 103 conflicts: 14 shift/reduce
State 104 conflicts: 14 shift/reduce
State 105 conflicts: 14 shift/reduce
State 110 conflicts: 14 shift/reduce
State 111 conflicts: 14 shift/reduce
State 112 conflicts: 14 shift/reduce
State 115 conflicts: 9 shift/reduce
State 125 conflicts: 4 shift/reduce
State 128 conflicts: 4 shift/reduce
State 133 conflicts: 4 shift/reduce
State 141 conflicts: 2 reduce/reduce
State 142 conflicts: 2 reduce/reduce
State 143 conflicts: 2 reduce/reduce
State 144 conflicts: 2 reduce/reduce
State 145 conflicts: 2 reduce/reduce
State 185 conflicts: 36 reduce/reduce
State 186 conflicts: 14 shift/reduce
State 187 conflicts: 9 shift/reduce
State 188 conflicts: 9 shift/reduce
State 189 conflicts: 9 shift/reduce
State 190 conflicts: 9 shift/reduce
State 197 conflicts: 9 shift/reduce
State 198 conflicts: 9 shift/reduce
State 199 conflicts: 9 shift/reduce
State 200 conflicts: 2 shift/reduce
State 201 conflicts: 2 shift/reduce
State 231 conflicts: 9 shift/reduce
State 241 conflicts: 2 reduce/reduce


Grammar

    0 $accept: Program $end

    1 Program: stmt stmts
    2        | %empty

    3 stmts: stmt stmts
    4      | %empty

    5 stmt: Def
    6     | NEWLINE
    7     | cal
    8     | print
    9     | block
   10     | setVal
   11     | error_assign
   12     | ifelse
   13     | forloop
   14     | const_add

   15 const: INT_LIT
   16      | FLOAT_LIT

   17 const_add: INT_LIT '+' FLOAT_LIT
   18          | FLOAT_LIT '+' FLOAT_LIT
   19          | ID '%' INT_LIT
   20          | INT_LIT LAND TRUE

   21 $@1: %empty

   22 const_add: FALSE $@1 LOR expr
   23          | ID '+' INT_LIT

   24 $@2: %empty

   25 $@3: %empty

   26 forloop: FOR const '{' $@2 $@3 stmts '}'

   27 $@4: %empty

   28 $@5: %empty

   29 forloop: FOR const_add '{' $@4 $@5 stmts '}'

   30 $@6: %empty

   31 forloop: FOR expr '{' $@6 stmts '}'

   32 $@7: %empty

   33 forloop: FOR forexpr '{' $@7 stmts '}'

   34 forexpr: ident assignVal ';' ident compare ';' cal

   35 $@8: %empty

   36 ifelse: IF expr '{' $@8 stmts '}'

   37 $@9: %empty

   38 ifelse: ELSE IF expr '{' $@9 stmts '}'

   39 $@10: %empty

   40 ifelse: ELSE '{' $@10 stmts '}'

   41 $@11: %empty

   42 $@12: %empty

   43 ifelse: IF ID $@11 '{' $@12 stmts '}'

   44 $@13: %empty

   45 $@14: %empty

   46 ifelse: IF FLOAT_LIT $@13 '{' $@14 stmts '}'

   47 $@15: %empty

   48 error_assign: INT_LIT $@15 assign

   49 $@16: %empty

   50 error_assign: FLOAT_LIT $@16 assign

   51 assign: '=' expr
   52       | ADD_ASSIGN expr
   53       | SUB_ASSIGN
   54       | MUL_ASSIGN
   55       | QUO_ASSIGN
   56       | REM_ASSIGN

   57 $@17: %empty

   58 setVal: ID '[' INT_LIT $@17 ']' value_initial
   59       | ident assignVal NEWLINE
   60       | ID '=' var NEWLINE

   61 var: INT_LIT
   62    | FLOAT_LIT
   63    | '"' STRING_LIT '"'
   64    | TRUE
   65    | FALSE
   66    | ID
   67    | expr

   68 assignVal: ADD_ASSIGN var
   69          | SUB_ASSIGN var
   70          | MUL_ASSIGN var
   71          | QUO_ASSIGN var
   72          | REM_ASSIGN var

   73 ident: ID

   74 value_initial: '=' expr NEWLINE
   75              | %empty

   76 $@18: %empty

   77 block: '{' NEWLINE $@18 stmts '}' NEWLINE

   78 Def: VAR ID INT INT_initial
   79    | VAR ID STRING STR_initial
   80    | VAR ID FLOAT FLOAT_initial
   81    | VAR ID BOOL BOOL_initial

   82 $@19: %empty

   83 Def: VAR ID '[' INT_LIT $@19 ']' typee NEWLINE

   84 typee: INT
   85      | FLOAT

   86 BOOL_initial: '=' TRUE NEWLINE
   87             | '=' FALSE NEWLINE
   88             | NEWLINE

   89 FLOAT_initial: '=' FLOAT_LIT NEWLINE
   90              | NEWLINE

   91 INT_initial: '=' INT_LIT NEWLINE
   92            | NEWLINE

   93 STR_initial: '=' '"' STRING_LIT '"' NEWLINE
   94            | NEWLINE

   95 cal: ident INC
   96    | ident DEC
   97    | ID '+' ID
   98    | ID '-' ID
   99    | ID '*' ID
  100    | ID '/' ID
  101    | ID '%' ID

  102 $@20: %empty

  103 print: PRINTLN $@20 '(' expr ')'

  104 $@21: %empty

  105 print: PRINT $@21 '(' expr ')'

  106 expr: expr '+' preexpr
  107     | expr '-' preexpr
  108     | expr '%' preexpr
  109     | preexpr
  110     | term
  111     | expr compare expr
  112     | andor expr
  113     | '(' expr ')'
  114     | bool
  115     | '"' STRING_LIT '"'
  116     | %empty

  117 preexpr: preexpr '*' preexpr
  118        | preexpr '/' preexpr
  119        | '(' expr ')'
  120        | term

  121 andor: LAND expr
  122      | LOR expr

  123 $@22: %empty

  124 bool: '!' bool $@22 expr
  125     | TRUE
  126     | FALSE

  127 compare: '>' expr
  128        | '<' expr
  129        | GEQ expr
  130        | LEQ expr
  131        | EQL expr
  132        | NEQ expr

  133 term: INT_LIT
  134     | FLOAT_LIT
  135     | SIGN_INT_LIT
  136     | SIGN_FLOAT_LIT

  137 $@23: %empty

  138 term: ID $@23 '[' expr ']'
  139     | ID
  140     | INT '(' ident ')'
  141     | INT '(' FLOAT_LIT ')'
  142     | FLOAT '(' ident ')'
  143     | FLOAT '(' INT_LIT ')'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 124
'"' (34) 63 93 115
'%' (37) 19 101 108
'(' (40) 103 105 113 119 140 141 142 143
')' (41) 103 105 113 119 140 141 142 143
'*' (42) 99 117
'+' (43) 17 18 23 97 106
'-' (45) 98 107
'/' (47) 100 118
';' (59) 34
'<' (60) 128
'=' (61) 51 60 74 86 87 89 91 93
'>' (62) 127
'[' (91) 58 83 138
']' (93) 58 83 138
'{' (123) 26 29 31 33 36 38 40 43 46 77
'}' (125) 26 29 31 33 36 38 40 43 46 77
error (256)
VAR (258) 78 79 80 81 83
INT (259) 78 84 140 141
FLOAT (260) 80 85 142 143
BOOL (261) 81
STRING (262) 79
INC (263) 95
DEC (264) 96
GEQ (265) 129
LEQ (266) 130
EQL (267) 131
NEQ (268) 132
ADD_ASSIGN (269) 52 68
SUB_ASSIGN (270) 53 69
MUL_ASSIGN (271) 54 70
QUO_ASSIGN (272) 55 71
REM_ASSIGN (273) 56 72
LAND (274) 20 121
LOR (275) 22 122
NEWLINE (276) 6 59 60 74 77 83 86 87 88 89 90 91 92 93 94
PRINT (277) 105
PRINTLN (278) 103
IF (279) 36 38 43 46
ELSE (280) 38 40
FOR (281) 26 29 31 33
TRUE (282) 20 64 86 125
FALSE (283) 22 65 87 126
INT_LIT (284) 15 17 19 20 23 48 58 61 83 91 133 143
SIGN_INT_LIT (285) 135
FLOAT_LIT (286) 16 17 18 46 50 62 89 134 141
SIGN_FLOAT_LIT (287) 136
STRING_LIT (288) 63 93 115
ID (289) 19 23 43 58 60 66 73 78 79 80 81 83 97 98 99 100 101 138 139


Nonterminals, with rules where they appear

$accept (52)
    on left: 0
Program (53)
    on left: 1 2, on right: 0
stmts (54)
    on left: 3 4, on right: 1 3 26 29 31 33 36 38 40 43 46 77
stmt (55)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 1 3
const (56)
    on left: 15 16, on right: 26
const_add (57)
    on left: 17 18 19 20 22 23, on right: 14 29
$@1 (58)
    on left: 21, on right: 22
forloop (59)
    on left: 26 29 31 33, on right: 13
$@2 (60)
    on left: 24, on right: 26
$@3 (61)
    on left: 25, on right: 26
$@4 (62)
    on left: 27, on right: 29
$@5 (63)
    on left: 28, on right: 29
$@6 (64)
    on left: 30, on right: 31
$@7 (65)
    on left: 32, on right: 33
forexpr (66)
    on left: 34, on right: 33
ifelse (67)
    on left: 36 38 40 43 46, on right: 12
$@8 (68)
    on left: 35, on right: 36
$@9 (69)
    on left: 37, on right: 38
$@10 (70)
    on left: 39, on right: 40
$@11 (71)
    on left: 41, on right: 43
$@12 (72)
    on left: 42, on right: 43
$@13 (73)
    on left: 44, on right: 46
$@14 (74)
    on left: 45, on right: 46
error_assign (75)
    on left: 48 50, on right: 11
$@15 (76)
    on left: 47, on right: 48
$@16 (77)
    on left: 49, on right: 50
assign (78)
    on left: 51 52 53 54 55 56, on right: 48 50
setVal (79)
    on left: 58 59 60, on right: 10
$@17 (80)
    on left: 57, on right: 58
var (81)
    on left: 61 62 63 64 65 66 67, on right: 60 68 69 70 71 72
assignVal (82)
    on left: 68 69 70 71 72, on right: 34 59
ident (83)
    on left: 73, on right: 34 59 95 96 140 142
value_initial (84)
    on left: 74 75, on right: 58
block (85)
    on left: 77, on right: 9
$@18 (86)
    on left: 76, on right: 77
Def (87)
    on left: 78 79 80 81 83, on right: 5
$@19 (88)
    on left: 82, on right: 83
typee (89)
    on left: 84 85, on right: 83
BOOL_initial (90)
    on left: 86 87 88, on right: 81
FLOAT_initial (91)
    on left: 89 90, on right: 80
INT_initial (92)
    on left: 91 92, on right: 78
STR_initial (93)
    on left: 93 94, on right: 79
cal (94)
    on left: 95 96 97 98 99 100 101, on right: 7 34
print (95)
    on left: 103 105, on right: 8
$@20 (96)
    on left: 102, on right: 103
$@21 (97)
    on left: 104, on right: 105
expr (98)
    on left: 106 107 108 109 110 111 112 113 114 115 116, on right:
    22 31 36 38 51 52 67 74 103 105 106 107 108 111 112 113 119 121
    122 124 127 128 129 130 131 132 138
preexpr (99)
    on left: 117 118 119 120, on right: 106 107 108 109 117 118
andor (100)
    on left: 121 122, on right: 112
bool (101)
    on left: 124 125 126, on right: 114 124
$@22 (102)
    on left: 123, on right: 124
compare (103)
    on left: 127 128 129 130 131 132, on right: 34 111
term (104)
    on left: 133 134 135 136 138 139 140 141 142 143, on right: 110
    120
$@23 (105)
    on left: 137, on right: 138


State 0

    0 $accept: . Program $end

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 2 (Program)

    Program       go to state 13
    stmt          go to state 14
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 1

   78 Def: VAR . ID INT INT_initial
   79    | VAR . ID STRING STR_initial
   80    | VAR . ID FLOAT FLOAT_initial
   81    | VAR . ID BOOL BOOL_initial
   83    | VAR . ID '[' INT_LIT $@19 ']' typee NEWLINE

    ID  shift, and go to state 25


State 2

    6 stmt: NEWLINE .

    $default  reduce using rule 6 (stmt)


State 3

  105 print: PRINT . $@21 '(' expr ')'

    $default  reduce using rule 104 ($@21)

    $@21  go to state 26


State 4

  103 print: PRINTLN . $@20 '(' expr ')'

    $default  reduce using rule 102 ($@20)

    $@20  go to state 27


State 5

   36 ifelse: IF . expr '{' $@8 stmts '}'
   43       | IF . ID $@11 '{' $@12 stmts '}'
   46       | IF . FLOAT_LIT $@13 '{' $@14 stmts '}'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 36
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 38
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 42
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 6

   38 ifelse: ELSE . IF expr '{' $@9 stmts '}'
   40       | ELSE . '{' $@10 stmts '}'

    IF   shift, and go to state 47
    '{'  shift, and go to state 48


State 7

   26 forloop: FOR . const '{' $@2 $@3 stmts '}'
   29        | FOR . const_add '{' $@4 $@5 stmts '}'
   31        | FOR . expr '{' $@6 stmts '}'
   33        | FOR . forexpr '{' $@7 stmts '}'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 49
    INT_LIT         shift, and go to state 50
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 51
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 52
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    const      go to state 53
    const_add  go to state 54
    forexpr    go to state 55
    ident      go to state 56
    expr       go to state 57
    preexpr    go to state 43
    andor      go to state 44
    bool       go to state 45
    term       go to state 46


State 8

   22 const_add: FALSE . $@1 LOR expr

    $default  reduce using rule 21 ($@1)

    $@1  go to state 58


State 9

   17 const_add: INT_LIT . '+' FLOAT_LIT
   20          | INT_LIT . LAND TRUE
   48 error_assign: INT_LIT . $@15 assign

    LAND  shift, and go to state 59
    '+'   shift, and go to state 60

    $default  reduce using rule 47 ($@15)

    $@15  go to state 61


State 10

   18 const_add: FLOAT_LIT . '+' FLOAT_LIT
   50 error_assign: FLOAT_LIT . $@16 assign

    '+'  shift, and go to state 62

    $default  reduce using rule 49 ($@16)

    $@16  go to state 63


State 11

   19 const_add: ID . '%' INT_LIT
   23          | ID . '+' INT_LIT
   58 setVal: ID . '[' INT_LIT $@17 ']' value_initial
   60       | ID . '=' var NEWLINE
   73 ident: ID .
   97 cal: ID . '+' ID
   98    | ID . '-' ID
   99    | ID . '*' ID
  100    | ID . '/' ID
  101    | ID . '%' ID

    '+'  shift, and go to state 64
    '%'  shift, and go to state 65
    '='  shift, and go to state 66
    '['  shift, and go to state 67
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 73 (ident)


State 12

   77 block: '{' . NEWLINE $@18 stmts '}' NEWLINE

    NEWLINE  shift, and go to state 71


State 13

    0 $accept: Program . $end

    $end  shift, and go to state 72


State 14

    1 Program: stmt . stmts

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 73
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 15

   14 stmt: const_add .

    $default  reduce using rule 14 (stmt)


State 16

   13 stmt: forloop .

    $default  reduce using rule 13 (stmt)


State 17

   12 stmt: ifelse .

    $default  reduce using rule 12 (stmt)


State 18

   11 stmt: error_assign .

    $default  reduce using rule 11 (stmt)


State 19

   10 stmt: setVal .

    $default  reduce using rule 10 (stmt)


State 20

   59 setVal: ident . assignVal NEWLINE
   95 cal: ident . INC
   96    | ident . DEC

    INC         shift, and go to state 75
    DEC         shift, and go to state 76
    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81

    assignVal  go to state 82


State 21

    9 stmt: block .

    $default  reduce using rule 9 (stmt)


State 22

    5 stmt: Def .

    $default  reduce using rule 5 (stmt)


State 23

    7 stmt: cal .

    $default  reduce using rule 7 (stmt)


State 24

    8 stmt: print .

    $default  reduce using rule 8 (stmt)


State 25

   78 Def: VAR ID . INT INT_initial
   79    | VAR ID . STRING STR_initial
   80    | VAR ID . FLOAT FLOAT_initial
   81    | VAR ID . BOOL BOOL_initial
   83    | VAR ID . '[' INT_LIT $@19 ']' typee NEWLINE

    INT     shift, and go to state 83
    FLOAT   shift, and go to state 84
    BOOL    shift, and go to state 85
    STRING  shift, and go to state 86
    '['     shift, and go to state 87


State 26

  105 print: PRINT $@21 . '(' expr ')'

    '('  shift, and go to state 88


State 27

  103 print: PRINTLN $@20 . '(' expr ')'

    '('  shift, and go to state 89


State 28

  140 term: INT . '(' ident ')'
  141     | INT . '(' FLOAT_LIT ')'

    '('  shift, and go to state 90


State 29

  142 term: FLOAT . '(' ident ')'
  143     | FLOAT . '(' INT_LIT ')'

    '('  shift, and go to state 91


State 30

  121 andor: LAND . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 94
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 31

  122 andor: LOR . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 95
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 32

  125 bool: TRUE .

    $default  reduce using rule 125 (bool)


State 33

  126 bool: FALSE .

    $default  reduce using rule 126 (bool)


State 34

  133 term: INT_LIT .

    $default  reduce using rule 133 (term)


State 35

  135 term: SIGN_INT_LIT .

    $default  reduce using rule 135 (term)


State 36

   46 ifelse: IF FLOAT_LIT . $@13 '{' $@14 stmts '}'
  134 term: FLOAT_LIT .

    '{'       reduce using rule 44 ($@13)
    '{'       [reduce using rule 134 (term)]
    $default  reduce using rule 134 (term)

    $@13  go to state 96


State 37

  136 term: SIGN_FLOAT_LIT .

    $default  reduce using rule 136 (term)


State 38

   43 ifelse: IF ID . $@11 '{' $@12 stmts '}'
  138 term: ID . $@23 '[' expr ']'
  139     | ID .

    '{'       reduce using rule 41 ($@11)
    '{'       [reduce using rule 139 (term)]
    '['       reduce using rule 137 ($@23)
    $default  reduce using rule 139 (term)

    $@11  go to state 97
    $@23  go to state 98


State 39

  115 expr: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 99


State 40

  113 expr: '(' . expr ')'
  119 preexpr: '(' . expr ')'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 100
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 41

  124 bool: '!' . bool $@22 expr

    TRUE   shift, and go to state 32
    FALSE  shift, and go to state 33
    '!'    shift, and go to state 41

    bool  go to state 101


State 42

   36 ifelse: IF expr . '{' $@8 stmts '}'
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '{'  shift, and go to state 108
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 43

  109 expr: preexpr .
  117 preexpr: preexpr . '*' preexpr
  118        | preexpr . '/' preexpr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    $default  reduce using rule 109 (expr)


State 44

  112 expr: andor . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 115
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 45

  114 expr: bool .

    $default  reduce using rule 114 (expr)


State 46

  110 expr: term .
  120 preexpr: term .

    $end            reduce using rule 110 (expr)
    $end            [reduce using rule 120 (preexpr)]
    VAR             reduce using rule 110 (expr)
    VAR             [reduce using rule 120 (preexpr)]
    INT             reduce using rule 110 (expr)
    INT             [reduce using rule 120 (preexpr)]
    FLOAT           reduce using rule 110 (expr)
    FLOAT           [reduce using rule 120 (preexpr)]
    GEQ             reduce using rule 110 (expr)
    GEQ             [reduce using rule 120 (preexpr)]
    LEQ             reduce using rule 110 (expr)
    LEQ             [reduce using rule 120 (preexpr)]
    EQL             reduce using rule 110 (expr)
    EQL             [reduce using rule 120 (preexpr)]
    NEQ             reduce using rule 110 (expr)
    NEQ             [reduce using rule 120 (preexpr)]
    LAND            reduce using rule 110 (expr)
    LAND            [reduce using rule 120 (preexpr)]
    LOR             reduce using rule 110 (expr)
    LOR             [reduce using rule 120 (preexpr)]
    NEWLINE         reduce using rule 110 (expr)
    NEWLINE         [reduce using rule 120 (preexpr)]
    PRINT           reduce using rule 110 (expr)
    PRINT           [reduce using rule 120 (preexpr)]
    PRINTLN         reduce using rule 110 (expr)
    PRINTLN         [reduce using rule 120 (preexpr)]
    IF              reduce using rule 110 (expr)
    IF              [reduce using rule 120 (preexpr)]
    ELSE            reduce using rule 110 (expr)
    ELSE            [reduce using rule 120 (preexpr)]
    FOR             reduce using rule 110 (expr)
    FOR             [reduce using rule 120 (preexpr)]
    TRUE            reduce using rule 110 (expr)
    TRUE            [reduce using rule 120 (preexpr)]
    FALSE           reduce using rule 110 (expr)
    FALSE           [reduce using rule 120 (preexpr)]
    INT_LIT         reduce using rule 110 (expr)
    INT_LIT         [reduce using rule 120 (preexpr)]
    SIGN_INT_LIT    reduce using rule 110 (expr)
    SIGN_INT_LIT    [reduce using rule 120 (preexpr)]
    FLOAT_LIT       reduce using rule 110 (expr)
    FLOAT_LIT       [reduce using rule 120 (preexpr)]
    SIGN_FLOAT_LIT  reduce using rule 110 (expr)
    SIGN_FLOAT_LIT  [reduce using rule 120 (preexpr)]
    ID              reduce using rule 110 (expr)
    ID              [reduce using rule 120 (preexpr)]
    '+'             reduce using rule 110 (expr)
    '+'             [reduce using rule 120 (preexpr)]
    '%'             reduce using rule 110 (expr)
    '%'             [reduce using rule 120 (preexpr)]
    '{'             reduce using rule 110 (expr)
    '{'             [reduce using rule 120 (preexpr)]
    '}'             reduce using rule 110 (expr)
    '}'             [reduce using rule 120 (preexpr)]
    ';'             reduce using rule 110 (expr)
    ';'             [reduce using rule 120 (preexpr)]
    ']'             reduce using rule 110 (expr)
    ']'             [reduce using rule 120 (preexpr)]
    '"'             reduce using rule 110 (expr)
    '"'             [reduce using rule 120 (preexpr)]
    '-'             reduce using rule 110 (expr)
    '-'             [reduce using rule 120 (preexpr)]
    '*'             reduce using rule 120 (preexpr)
    '/'             reduce using rule 120 (preexpr)
    '('             reduce using rule 110 (expr)
    '('             [reduce using rule 120 (preexpr)]
    ')'             reduce using rule 110 (expr)
    ')'             [reduce using rule 120 (preexpr)]
    '!'             reduce using rule 110 (expr)
    '!'             [reduce using rule 120 (preexpr)]
    '>'             reduce using rule 110 (expr)
    '>'             [reduce using rule 120 (preexpr)]
    '<'             reduce using rule 110 (expr)
    '<'             [reduce using rule 120 (preexpr)]
    $default        reduce using rule 110 (expr)


State 47

   38 ifelse: ELSE IF . expr '{' $@9 stmts '}'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 116
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 48

   40 ifelse: ELSE '{' . $@10 stmts '}'

    $default  reduce using rule 39 ($@10)

    $@10  go to state 117


State 49

   22 const_add: FALSE . $@1 LOR expr
  126 bool: FALSE .

    LOR       reduce using rule 21 ($@1)
    $default  reduce using rule 126 (bool)

    $@1  go to state 58


State 50

   15 const: INT_LIT .
   17 const_add: INT_LIT . '+' FLOAT_LIT
   20          | INT_LIT . LAND TRUE
  133 term: INT_LIT .

    LAND  shift, and go to state 59
    '+'   shift, and go to state 60

    '+'       [reduce using rule 133 (term)]
    '{'       reduce using rule 15 (const)
    '{'       [reduce using rule 133 (term)]
    $default  reduce using rule 133 (term)


State 51

   16 const: FLOAT_LIT .
   18 const_add: FLOAT_LIT . '+' FLOAT_LIT
  134 term: FLOAT_LIT .

    '+'  shift, and go to state 62

    '+'       [reduce using rule 134 (term)]
    '{'       reduce using rule 16 (const)
    '{'       [reduce using rule 134 (term)]
    $default  reduce using rule 134 (term)


State 52

   19 const_add: ID . '%' INT_LIT
   23          | ID . '+' INT_LIT
   73 ident: ID .
  138 term: ID . $@23 '[' expr ']'
  139     | ID .

    '+'  shift, and go to state 118
    '%'  shift, and go to state 119

    ADD_ASSIGN  reduce using rule 73 (ident)
    SUB_ASSIGN  reduce using rule 73 (ident)
    MUL_ASSIGN  reduce using rule 73 (ident)
    QUO_ASSIGN  reduce using rule 73 (ident)
    REM_ASSIGN  reduce using rule 73 (ident)
    '+'         [reduce using rule 139 (term)]
    '%'         [reduce using rule 139 (term)]
    '['         reduce using rule 137 ($@23)
    $default    reduce using rule 139 (term)

    $@23  go to state 98


State 53

   26 forloop: FOR const . '{' $@2 $@3 stmts '}'

    '{'  shift, and go to state 120


State 54

   29 forloop: FOR const_add . '{' $@4 $@5 stmts '}'

    '{'  shift, and go to state 121


State 55

   33 forloop: FOR forexpr . '{' $@7 stmts '}'

    '{'  shift, and go to state 122


State 56

   34 forexpr: ident . assignVal ';' ident compare ';' cal

    ADD_ASSIGN  shift, and go to state 77
    SUB_ASSIGN  shift, and go to state 78
    MUL_ASSIGN  shift, and go to state 79
    QUO_ASSIGN  shift, and go to state 80
    REM_ASSIGN  shift, and go to state 81

    assignVal  go to state 123


State 57

   31 forloop: FOR expr . '{' $@6 stmts '}'
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '{'  shift, and go to state 124
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 58

   22 const_add: FALSE $@1 . LOR expr

    LOR  shift, and go to state 125


State 59

   20 const_add: INT_LIT LAND . TRUE

    TRUE  shift, and go to state 126


State 60

   17 const_add: INT_LIT '+' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 127


State 61

   48 error_assign: INT_LIT $@15 . assign

    ADD_ASSIGN  shift, and go to state 128
    SUB_ASSIGN  shift, and go to state 129
    MUL_ASSIGN  shift, and go to state 130
    QUO_ASSIGN  shift, and go to state 131
    REM_ASSIGN  shift, and go to state 132
    '='         shift, and go to state 133

    assign  go to state 134


State 62

   18 const_add: FLOAT_LIT '+' . FLOAT_LIT

    FLOAT_LIT  shift, and go to state 135


State 63

   50 error_assign: FLOAT_LIT $@16 . assign

    ADD_ASSIGN  shift, and go to state 128
    SUB_ASSIGN  shift, and go to state 129
    MUL_ASSIGN  shift, and go to state 130
    QUO_ASSIGN  shift, and go to state 131
    REM_ASSIGN  shift, and go to state 132
    '='         shift, and go to state 133

    assign  go to state 136


State 64

   23 const_add: ID '+' . INT_LIT
   97 cal: ID '+' . ID

    INT_LIT  shift, and go to state 137
    ID       shift, and go to state 138


State 65

   19 const_add: ID '%' . INT_LIT
  101 cal: ID '%' . ID

    INT_LIT  shift, and go to state 139
    ID       shift, and go to state 140


State 66

   60 setVal: ID '=' . var NEWLINE

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 147
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 67

   58 setVal: ID '[' . INT_LIT $@17 ']' value_initial

    INT_LIT  shift, and go to state 149


State 68

   98 cal: ID '-' . ID

    ID  shift, and go to state 150


State 69

   99 cal: ID '*' . ID

    ID  shift, and go to state 151


State 70

  100 cal: ID '/' . ID

    ID  shift, and go to state 152


State 71

   77 block: '{' NEWLINE . $@18 stmts '}' NEWLINE

    $default  reduce using rule 76 ($@18)

    $@18  go to state 153


State 72

    0 $accept: Program $end .

    $default  accept


State 73

    1 Program: stmt stmts .

    $default  reduce using rule 1 (Program)


State 74

    3 stmts: stmt . stmts

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 154
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 75

   95 cal: ident INC .

    $default  reduce using rule 95 (cal)


State 76

   96 cal: ident DEC .

    $default  reduce using rule 96 (cal)


State 77

   68 assignVal: ADD_ASSIGN . var

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 155
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 78

   69 assignVal: SUB_ASSIGN . var

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 156
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 79

   70 assignVal: MUL_ASSIGN . var

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 157
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 80

   71 assignVal: QUO_ASSIGN . var

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 158
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 81

   72 assignVal: REM_ASSIGN . var

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 141
    FALSE           shift, and go to state 142
    INT_LIT         shift, and go to state 143
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 144
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 145
    '"'             shift, and go to state 146
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    var      go to state 159
    expr     go to state 148
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 82

   59 setVal: ident assignVal . NEWLINE

    NEWLINE  shift, and go to state 160


State 83

   78 Def: VAR ID INT . INT_initial

    NEWLINE  shift, and go to state 161
    '='      shift, and go to state 162

    INT_initial  go to state 163


State 84

   80 Def: VAR ID FLOAT . FLOAT_initial

    NEWLINE  shift, and go to state 164
    '='      shift, and go to state 165

    FLOAT_initial  go to state 166


State 85

   81 Def: VAR ID BOOL . BOOL_initial

    NEWLINE  shift, and go to state 167
    '='      shift, and go to state 168

    BOOL_initial  go to state 169


State 86

   79 Def: VAR ID STRING . STR_initial

    NEWLINE  shift, and go to state 170
    '='      shift, and go to state 171

    STR_initial  go to state 172


State 87

   83 Def: VAR ID '[' . INT_LIT $@19 ']' typee NEWLINE

    INT_LIT  shift, and go to state 173


State 88

  105 print: PRINT $@21 '(' . expr ')'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 174
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 89

  103 print: PRINTLN $@20 '(' . expr ')'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 175
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 90

  140 term: INT '(' . ident ')'
  141     | INT '(' . FLOAT_LIT ')'

    FLOAT_LIT  shift, and go to state 176
    ID         shift, and go to state 177

    ident  go to state 178


State 91

  142 term: FLOAT '(' . ident ')'
  143     | FLOAT '(' . INT_LIT ')'

    INT_LIT  shift, and go to state 179
    ID       shift, and go to state 177

    ident  go to state 180


State 92

  134 term: FLOAT_LIT .

    $default  reduce using rule 134 (term)


State 93

  138 term: ID . $@23 '[' expr ']'
  139     | ID .

    '['       reduce using rule 137 ($@23)
    $default  reduce using rule 139 (term)

    $@23  go to state 98


State 94

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  121 andor: LAND expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 121 (andor)]
    LEQ       [reduce using rule 121 (andor)]
    EQL       [reduce using rule 121 (andor)]
    NEQ       [reduce using rule 121 (andor)]
    '+'       [reduce using rule 121 (andor)]
    '%'       [reduce using rule 121 (andor)]
    '-'       [reduce using rule 121 (andor)]
    '>'       [reduce using rule 121 (andor)]
    '<'       [reduce using rule 121 (andor)]
    $default  reduce using rule 121 (andor)

    compare  go to state 112


State 95

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  122 andor: LOR expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 122 (andor)]
    LEQ       [reduce using rule 122 (andor)]
    EQL       [reduce using rule 122 (andor)]
    NEQ       [reduce using rule 122 (andor)]
    '+'       [reduce using rule 122 (andor)]
    '%'       [reduce using rule 122 (andor)]
    '-'       [reduce using rule 122 (andor)]
    '>'       [reduce using rule 122 (andor)]
    '<'       [reduce using rule 122 (andor)]
    $default  reduce using rule 122 (andor)

    compare  go to state 112


State 96

   46 ifelse: IF FLOAT_LIT $@13 . '{' $@14 stmts '}'

    '{'  shift, and go to state 181


State 97

   43 ifelse: IF ID $@11 . '{' $@12 stmts '}'

    '{'  shift, and go to state 182


State 98

  138 term: ID $@23 . '[' expr ']'

    '['  shift, and go to state 183


State 99

  115 expr: '"' STRING_LIT . '"'

    '"'  shift, and go to state 184


State 100

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  113     | '(' expr . ')'
  119 preexpr: '(' expr . ')'

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    ')'  shift, and go to state 185
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 101

  124 bool: '!' bool . $@22 expr

    $default  reduce using rule 123 ($@22)

    $@22  go to state 186


State 102

  129 compare: GEQ . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 187
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 103

  130 compare: LEQ . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 188
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 104

  131 compare: EQL . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 189
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 105

  132 compare: NEQ . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 190
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 106

  106 expr: expr '+' . preexpr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '('             shift, and go to state 191

    preexpr  go to state 192
    term     go to state 193


State 107

  108 expr: expr '%' . preexpr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '('             shift, and go to state 191

    preexpr  go to state 194
    term     go to state 193


State 108

   36 ifelse: IF expr '{' . $@8 stmts '}'

    $default  reduce using rule 35 ($@8)

    $@8  go to state 195


State 109

  107 expr: expr '-' . preexpr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '('             shift, and go to state 191

    preexpr  go to state 196
    term     go to state 193


State 110

  127 compare: '>' . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 197
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 111

  128 compare: '<' . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 198
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 112

  111 expr: expr compare . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 199
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 113

  117 preexpr: preexpr '*' . preexpr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '('             shift, and go to state 191

    preexpr  go to state 200
    term     go to state 193


State 114

  118 preexpr: preexpr '/' . preexpr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '('             shift, and go to state 191

    preexpr  go to state 201
    term     go to state 193


State 115

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  112     | andor expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 112 (expr)]
    LEQ       [reduce using rule 112 (expr)]
    EQL       [reduce using rule 112 (expr)]
    NEQ       [reduce using rule 112 (expr)]
    '+'       [reduce using rule 112 (expr)]
    '%'       [reduce using rule 112 (expr)]
    '-'       [reduce using rule 112 (expr)]
    '>'       [reduce using rule 112 (expr)]
    '<'       [reduce using rule 112 (expr)]
    $default  reduce using rule 112 (expr)

    compare  go to state 112


State 116

   38 ifelse: ELSE IF expr . '{' $@9 stmts '}'
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '{'  shift, and go to state 202
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 117

   40 ifelse: ELSE '{' $@10 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 203
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 118

   23 const_add: ID '+' . INT_LIT

    INT_LIT  shift, and go to state 137


State 119

   19 const_add: ID '%' . INT_LIT

    INT_LIT  shift, and go to state 139


State 120

   26 forloop: FOR const '{' . $@2 $@3 stmts '}'

    $default  reduce using rule 24 ($@2)

    $@2  go to state 204


State 121

   29 forloop: FOR const_add '{' . $@4 $@5 stmts '}'

    $default  reduce using rule 27 ($@4)

    $@4  go to state 205


State 122

   33 forloop: FOR forexpr '{' . $@7 stmts '}'

    $default  reduce using rule 32 ($@7)

    $@7  go to state 206


State 123

   34 forexpr: ident assignVal . ';' ident compare ';' cal

    ';'  shift, and go to state 207


State 124

   31 forloop: FOR expr '{' . $@6 stmts '}'

    $default  reduce using rule 30 ($@6)

    $@6  go to state 208


State 125

   22 const_add: FALSE $@1 LOR . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    FALSE      [reduce using rule 116 (expr)]
    INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT  [reduce using rule 116 (expr)]
    ID         [reduce using rule 116 (expr)]
    $default   reduce using rule 116 (expr)

    expr     go to state 209
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 126

   20 const_add: INT_LIT LAND TRUE .

    $default  reduce using rule 20 (const_add)


State 127

   17 const_add: INT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 17 (const_add)


State 128

   52 assign: ADD_ASSIGN . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    FALSE      [reduce using rule 116 (expr)]
    INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT  [reduce using rule 116 (expr)]
    ID         [reduce using rule 116 (expr)]
    $default   reduce using rule 116 (expr)

    expr     go to state 210
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 129

   53 assign: SUB_ASSIGN .

    $default  reduce using rule 53 (assign)


State 130

   54 assign: MUL_ASSIGN .

    $default  reduce using rule 54 (assign)


State 131

   55 assign: QUO_ASSIGN .

    $default  reduce using rule 55 (assign)


State 132

   56 assign: REM_ASSIGN .

    $default  reduce using rule 56 (assign)


State 133

   51 assign: '=' . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    FALSE      [reduce using rule 116 (expr)]
    INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT  [reduce using rule 116 (expr)]
    ID         [reduce using rule 116 (expr)]
    $default   reduce using rule 116 (expr)

    expr     go to state 211
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 134

   48 error_assign: INT_LIT $@15 assign .

    $default  reduce using rule 48 (error_assign)


State 135

   18 const_add: FLOAT_LIT '+' FLOAT_LIT .

    $default  reduce using rule 18 (const_add)


State 136

   50 error_assign: FLOAT_LIT $@16 assign .

    $default  reduce using rule 50 (error_assign)


State 137

   23 const_add: ID '+' INT_LIT .

    $default  reduce using rule 23 (const_add)


State 138

   97 cal: ID '+' ID .

    $default  reduce using rule 97 (cal)


State 139

   19 const_add: ID '%' INT_LIT .

    $default  reduce using rule 19 (const_add)


State 140

  101 cal: ID '%' ID .

    $default  reduce using rule 101 (cal)


State 141

   64 var: TRUE .
  125 bool: TRUE .

    NEWLINE   reduce using rule 64 (var)
    NEWLINE   [reduce using rule 125 (bool)]
    ';'       reduce using rule 64 (var)
    ';'       [reduce using rule 125 (bool)]
    $default  reduce using rule 125 (bool)


State 142

   65 var: FALSE .
  126 bool: FALSE .

    NEWLINE   reduce using rule 65 (var)
    NEWLINE   [reduce using rule 126 (bool)]
    ';'       reduce using rule 65 (var)
    ';'       [reduce using rule 126 (bool)]
    $default  reduce using rule 126 (bool)


State 143

   61 var: INT_LIT .
  133 term: INT_LIT .

    NEWLINE   reduce using rule 61 (var)
    NEWLINE   [reduce using rule 133 (term)]
    ';'       reduce using rule 61 (var)
    ';'       [reduce using rule 133 (term)]
    $default  reduce using rule 133 (term)


State 144

   62 var: FLOAT_LIT .
  134 term: FLOAT_LIT .

    NEWLINE   reduce using rule 62 (var)
    NEWLINE   [reduce using rule 134 (term)]
    ';'       reduce using rule 62 (var)
    ';'       [reduce using rule 134 (term)]
    $default  reduce using rule 134 (term)


State 145

   66 var: ID .
  138 term: ID . $@23 '[' expr ']'
  139     | ID .

    NEWLINE   reduce using rule 66 (var)
    NEWLINE   [reduce using rule 139 (term)]
    ';'       reduce using rule 66 (var)
    ';'       [reduce using rule 139 (term)]
    '['       reduce using rule 137 ($@23)
    $default  reduce using rule 139 (term)

    $@23  go to state 98


State 146

   63 var: '"' . STRING_LIT '"'
  115 expr: '"' . STRING_LIT '"'

    STRING_LIT  shift, and go to state 212


State 147

   60 setVal: ID '=' var . NEWLINE

    NEWLINE  shift, and go to state 213


State 148

   67 var: expr .
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    $default  reduce using rule 67 (var)

    compare  go to state 112


State 149

   58 setVal: ID '[' INT_LIT . $@17 ']' value_initial

    $default  reduce using rule 57 ($@17)

    $@17  go to state 214


State 150

   98 cal: ID '-' ID .

    $default  reduce using rule 98 (cal)


State 151

   99 cal: ID '*' ID .

    $default  reduce using rule 99 (cal)


State 152

  100 cal: ID '/' ID .

    $default  reduce using rule 100 (cal)


State 153

   77 block: '{' NEWLINE $@18 . stmts '}' NEWLINE

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 215
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 154

    3 stmts: stmt stmts .

    $default  reduce using rule 3 (stmts)


State 155

   68 assignVal: ADD_ASSIGN var .

    $default  reduce using rule 68 (assignVal)


State 156

   69 assignVal: SUB_ASSIGN var .

    $default  reduce using rule 69 (assignVal)


State 157

   70 assignVal: MUL_ASSIGN var .

    $default  reduce using rule 70 (assignVal)


State 158

   71 assignVal: QUO_ASSIGN var .

    $default  reduce using rule 71 (assignVal)


State 159

   72 assignVal: REM_ASSIGN var .

    $default  reduce using rule 72 (assignVal)


State 160

   59 setVal: ident assignVal NEWLINE .

    $default  reduce using rule 59 (setVal)


State 161

   92 INT_initial: NEWLINE .

    $default  reduce using rule 92 (INT_initial)


State 162

   91 INT_initial: '=' . INT_LIT NEWLINE

    INT_LIT  shift, and go to state 216


State 163

   78 Def: VAR ID INT INT_initial .

    $default  reduce using rule 78 (Def)


State 164

   90 FLOAT_initial: NEWLINE .

    $default  reduce using rule 90 (FLOAT_initial)


State 165

   89 FLOAT_initial: '=' . FLOAT_LIT NEWLINE

    FLOAT_LIT  shift, and go to state 217


State 166

   80 Def: VAR ID FLOAT FLOAT_initial .

    $default  reduce using rule 80 (Def)


State 167

   88 BOOL_initial: NEWLINE .

    $default  reduce using rule 88 (BOOL_initial)


State 168

   86 BOOL_initial: '=' . TRUE NEWLINE
   87             | '=' . FALSE NEWLINE

    TRUE   shift, and go to state 218
    FALSE  shift, and go to state 219


State 169

   81 Def: VAR ID BOOL BOOL_initial .

    $default  reduce using rule 81 (Def)


State 170

   94 STR_initial: NEWLINE .

    $default  reduce using rule 94 (STR_initial)


State 171

   93 STR_initial: '=' . '"' STRING_LIT '"' NEWLINE

    '"'  shift, and go to state 220


State 172

   79 Def: VAR ID STRING STR_initial .

    $default  reduce using rule 79 (Def)


State 173

   83 Def: VAR ID '[' INT_LIT . $@19 ']' typee NEWLINE

    $default  reduce using rule 82 ($@19)

    $@19  go to state 221


State 174

  105 print: PRINT $@21 '(' expr . ')'
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    ')'  shift, and go to state 222
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 175

  103 print: PRINTLN $@20 '(' expr . ')'
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    ')'  shift, and go to state 223
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 176

  141 term: INT '(' FLOAT_LIT . ')'

    ')'  shift, and go to state 224


State 177

   73 ident: ID .

    $default  reduce using rule 73 (ident)


State 178

  140 term: INT '(' ident . ')'

    ')'  shift, and go to state 225


State 179

  143 term: FLOAT '(' INT_LIT . ')'

    ')'  shift, and go to state 226


State 180

  142 term: FLOAT '(' ident . ')'

    ')'  shift, and go to state 227


State 181

   46 ifelse: IF FLOAT_LIT $@13 '{' . $@14 stmts '}'

    $default  reduce using rule 45 ($@14)

    $@14  go to state 228


State 182

   43 ifelse: IF ID $@11 '{' . $@12 stmts '}'

    $default  reduce using rule 42 ($@12)

    $@12  go to state 229


State 183

  138 term: ID $@23 '[' . expr ']'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 230
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 184

  115 expr: '"' STRING_LIT '"' .

    $default  reduce using rule 115 (expr)


State 185

  113 expr: '(' expr ')' .
  119 preexpr: '(' expr ')' .

    $end            reduce using rule 113 (expr)
    $end            [reduce using rule 119 (preexpr)]
    VAR             reduce using rule 113 (expr)
    VAR             [reduce using rule 119 (preexpr)]
    INT             reduce using rule 113 (expr)
    INT             [reduce using rule 119 (preexpr)]
    FLOAT           reduce using rule 113 (expr)
    FLOAT           [reduce using rule 119 (preexpr)]
    GEQ             reduce using rule 113 (expr)
    GEQ             [reduce using rule 119 (preexpr)]
    LEQ             reduce using rule 113 (expr)
    LEQ             [reduce using rule 119 (preexpr)]
    EQL             reduce using rule 113 (expr)
    EQL             [reduce using rule 119 (preexpr)]
    NEQ             reduce using rule 113 (expr)
    NEQ             [reduce using rule 119 (preexpr)]
    LAND            reduce using rule 113 (expr)
    LAND            [reduce using rule 119 (preexpr)]
    LOR             reduce using rule 113 (expr)
    LOR             [reduce using rule 119 (preexpr)]
    NEWLINE         reduce using rule 113 (expr)
    NEWLINE         [reduce using rule 119 (preexpr)]
    PRINT           reduce using rule 113 (expr)
    PRINT           [reduce using rule 119 (preexpr)]
    PRINTLN         reduce using rule 113 (expr)
    PRINTLN         [reduce using rule 119 (preexpr)]
    IF              reduce using rule 113 (expr)
    IF              [reduce using rule 119 (preexpr)]
    ELSE            reduce using rule 113 (expr)
    ELSE            [reduce using rule 119 (preexpr)]
    FOR             reduce using rule 113 (expr)
    FOR             [reduce using rule 119 (preexpr)]
    TRUE            reduce using rule 113 (expr)
    TRUE            [reduce using rule 119 (preexpr)]
    FALSE           reduce using rule 113 (expr)
    FALSE           [reduce using rule 119 (preexpr)]
    INT_LIT         reduce using rule 113 (expr)
    INT_LIT         [reduce using rule 119 (preexpr)]
    SIGN_INT_LIT    reduce using rule 113 (expr)
    SIGN_INT_LIT    [reduce using rule 119 (preexpr)]
    FLOAT_LIT       reduce using rule 113 (expr)
    FLOAT_LIT       [reduce using rule 119 (preexpr)]
    SIGN_FLOAT_LIT  reduce using rule 113 (expr)
    SIGN_FLOAT_LIT  [reduce using rule 119 (preexpr)]
    ID              reduce using rule 113 (expr)
    ID              [reduce using rule 119 (preexpr)]
    '+'             reduce using rule 113 (expr)
    '+'             [reduce using rule 119 (preexpr)]
    '%'             reduce using rule 113 (expr)
    '%'             [reduce using rule 119 (preexpr)]
    '{'             reduce using rule 113 (expr)
    '{'             [reduce using rule 119 (preexpr)]
    '}'             reduce using rule 113 (expr)
    '}'             [reduce using rule 119 (preexpr)]
    ';'             reduce using rule 113 (expr)
    ';'             [reduce using rule 119 (preexpr)]
    ']'             reduce using rule 113 (expr)
    ']'             [reduce using rule 119 (preexpr)]
    '"'             reduce using rule 113 (expr)
    '"'             [reduce using rule 119 (preexpr)]
    '-'             reduce using rule 113 (expr)
    '-'             [reduce using rule 119 (preexpr)]
    '*'             reduce using rule 119 (preexpr)
    '/'             reduce using rule 119 (preexpr)
    '('             reduce using rule 113 (expr)
    '('             [reduce using rule 119 (preexpr)]
    ')'             reduce using rule 113 (expr)
    ')'             [reduce using rule 119 (preexpr)]
    '!'             reduce using rule 113 (expr)
    '!'             [reduce using rule 119 (preexpr)]
    '>'             reduce using rule 113 (expr)
    '>'             [reduce using rule 119 (preexpr)]
    '<'             reduce using rule 113 (expr)
    '<'             [reduce using rule 119 (preexpr)]
    $default        reduce using rule 113 (expr)


State 186

  124 bool: '!' bool $@22 . expr

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    INT             [reduce using rule 116 (expr)]
    FLOAT           [reduce using rule 116 (expr)]
    LAND            [reduce using rule 116 (expr)]
    LOR             [reduce using rule 116 (expr)]
    TRUE            [reduce using rule 116 (expr)]
    FALSE           [reduce using rule 116 (expr)]
    INT_LIT         [reduce using rule 116 (expr)]
    SIGN_INT_LIT    [reduce using rule 116 (expr)]
    FLOAT_LIT       [reduce using rule 116 (expr)]
    SIGN_FLOAT_LIT  [reduce using rule 116 (expr)]
    ID              [reduce using rule 116 (expr)]
    '"'             [reduce using rule 116 (expr)]
    '('             [reduce using rule 116 (expr)]
    '!'             [reduce using rule 116 (expr)]
    $default        reduce using rule 116 (expr)

    expr     go to state 231
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 187

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  129 compare: GEQ expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 129 (compare)]
    LEQ       [reduce using rule 129 (compare)]
    EQL       [reduce using rule 129 (compare)]
    NEQ       [reduce using rule 129 (compare)]
    '+'       [reduce using rule 129 (compare)]
    '%'       [reduce using rule 129 (compare)]
    '-'       [reduce using rule 129 (compare)]
    '>'       [reduce using rule 129 (compare)]
    '<'       [reduce using rule 129 (compare)]
    $default  reduce using rule 129 (compare)

    compare  go to state 112


State 188

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  130 compare: LEQ expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 130 (compare)]
    LEQ       [reduce using rule 130 (compare)]
    EQL       [reduce using rule 130 (compare)]
    NEQ       [reduce using rule 130 (compare)]
    '+'       [reduce using rule 130 (compare)]
    '%'       [reduce using rule 130 (compare)]
    '-'       [reduce using rule 130 (compare)]
    '>'       [reduce using rule 130 (compare)]
    '<'       [reduce using rule 130 (compare)]
    $default  reduce using rule 130 (compare)

    compare  go to state 112


State 189

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  131 compare: EQL expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 131 (compare)]
    LEQ       [reduce using rule 131 (compare)]
    EQL       [reduce using rule 131 (compare)]
    NEQ       [reduce using rule 131 (compare)]
    '+'       [reduce using rule 131 (compare)]
    '%'       [reduce using rule 131 (compare)]
    '-'       [reduce using rule 131 (compare)]
    '>'       [reduce using rule 131 (compare)]
    '<'       [reduce using rule 131 (compare)]
    $default  reduce using rule 131 (compare)

    compare  go to state 112


State 190

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  132 compare: NEQ expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 132 (compare)]
    LEQ       [reduce using rule 132 (compare)]
    EQL       [reduce using rule 132 (compare)]
    NEQ       [reduce using rule 132 (compare)]
    '+'       [reduce using rule 132 (compare)]
    '%'       [reduce using rule 132 (compare)]
    '-'       [reduce using rule 132 (compare)]
    '>'       [reduce using rule 132 (compare)]
    '<'       [reduce using rule 132 (compare)]
    $default  reduce using rule 132 (compare)

    compare  go to state 112


State 191

  119 preexpr: '(' . expr ')'

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 232
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 192

  106 expr: expr '+' preexpr .
  117 preexpr: preexpr . '*' preexpr
  118        | preexpr . '/' preexpr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    $default  reduce using rule 106 (expr)


State 193

  120 preexpr: term .

    $default  reduce using rule 120 (preexpr)


State 194

  108 expr: expr '%' preexpr .
  117 preexpr: preexpr . '*' preexpr
  118        | preexpr . '/' preexpr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    $default  reduce using rule 108 (expr)


State 195

   36 ifelse: IF expr '{' $@8 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 233
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 196

  107 expr: expr '-' preexpr .
  117 preexpr: preexpr . '*' preexpr
  118        | preexpr . '/' preexpr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    $default  reduce using rule 107 (expr)


State 197

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  127 compare: '>' expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 127 (compare)]
    LEQ       [reduce using rule 127 (compare)]
    EQL       [reduce using rule 127 (compare)]
    NEQ       [reduce using rule 127 (compare)]
    '+'       [reduce using rule 127 (compare)]
    '%'       [reduce using rule 127 (compare)]
    '-'       [reduce using rule 127 (compare)]
    '>'       [reduce using rule 127 (compare)]
    '<'       [reduce using rule 127 (compare)]
    $default  reduce using rule 127 (compare)

    compare  go to state 112


State 198

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  128 compare: '<' expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 128 (compare)]
    LEQ       [reduce using rule 128 (compare)]
    EQL       [reduce using rule 128 (compare)]
    NEQ       [reduce using rule 128 (compare)]
    '+'       [reduce using rule 128 (compare)]
    '%'       [reduce using rule 128 (compare)]
    '-'       [reduce using rule 128 (compare)]
    '>'       [reduce using rule 128 (compare)]
    '<'       [reduce using rule 128 (compare)]
    $default  reduce using rule 128 (compare)

    compare  go to state 112


State 199

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  111     | expr compare expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 111 (expr)]
    LEQ       [reduce using rule 111 (expr)]
    EQL       [reduce using rule 111 (expr)]
    NEQ       [reduce using rule 111 (expr)]
    '+'       [reduce using rule 111 (expr)]
    '%'       [reduce using rule 111 (expr)]
    '-'       [reduce using rule 111 (expr)]
    '>'       [reduce using rule 111 (expr)]
    '<'       [reduce using rule 111 (expr)]
    $default  reduce using rule 111 (expr)

    compare  go to state 112


State 200

  117 preexpr: preexpr . '*' preexpr
  117        | preexpr '*' preexpr .
  118        | preexpr . '/' preexpr

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    '*'       [reduce using rule 117 (preexpr)]
    '/'       [reduce using rule 117 (preexpr)]
    $default  reduce using rule 117 (preexpr)


State 201

  117 preexpr: preexpr . '*' preexpr
  118        | preexpr . '/' preexpr
  118        | preexpr '/' preexpr .

    '*'  shift, and go to state 113
    '/'  shift, and go to state 114

    '*'       [reduce using rule 118 (preexpr)]
    '/'       [reduce using rule 118 (preexpr)]
    $default  reduce using rule 118 (preexpr)


State 202

   38 ifelse: ELSE IF expr '{' . $@9 stmts '}'

    $default  reduce using rule 37 ($@9)

    $@9  go to state 234


State 203

   40 ifelse: ELSE '{' $@10 stmts . '}'

    '}'  shift, and go to state 235


State 204

   26 forloop: FOR const '{' $@2 . $@3 stmts '}'

    $default  reduce using rule 25 ($@3)

    $@3  go to state 236


State 205

   29 forloop: FOR const_add '{' $@4 . $@5 stmts '}'

    $default  reduce using rule 28 ($@5)

    $@5  go to state 237


State 206

   33 forloop: FOR forexpr '{' $@7 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 238
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 207

   34 forexpr: ident assignVal ';' . ident compare ';' cal

    ID  shift, and go to state 177

    ident  go to state 239


State 208

   31 forloop: FOR expr '{' $@6 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 240
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 209

   22 const_add: FALSE $@1 LOR expr .
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    $default  reduce using rule 22 (const_add)

    compare  go to state 112


State 210

   52 assign: ADD_ASSIGN expr .
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    $default  reduce using rule 52 (assign)

    compare  go to state 112


State 211

   51 assign: '=' expr .
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    $default  reduce using rule 51 (assign)

    compare  go to state 112


State 212

   63 var: '"' STRING_LIT . '"'
  115 expr: '"' STRING_LIT . '"'

    '"'  shift, and go to state 241


State 213

   60 setVal: ID '=' var NEWLINE .

    $default  reduce using rule 60 (setVal)


State 214

   58 setVal: ID '[' INT_LIT $@17 . ']' value_initial

    ']'  shift, and go to state 242


State 215

   77 block: '{' NEWLINE $@18 stmts . '}' NEWLINE

    '}'  shift, and go to state 243


State 216

   91 INT_initial: '=' INT_LIT . NEWLINE

    NEWLINE  shift, and go to state 244


State 217

   89 FLOAT_initial: '=' FLOAT_LIT . NEWLINE

    NEWLINE  shift, and go to state 245


State 218

   86 BOOL_initial: '=' TRUE . NEWLINE

    NEWLINE  shift, and go to state 246


State 219

   87 BOOL_initial: '=' FALSE . NEWLINE

    NEWLINE  shift, and go to state 247


State 220

   93 STR_initial: '=' '"' . STRING_LIT '"' NEWLINE

    STRING_LIT  shift, and go to state 248


State 221

   83 Def: VAR ID '[' INT_LIT $@19 . ']' typee NEWLINE

    ']'  shift, and go to state 249


State 222

  105 print: PRINT $@21 '(' expr ')' .

    $default  reduce using rule 105 (print)


State 223

  103 print: PRINTLN $@20 '(' expr ')' .

    $default  reduce using rule 103 (print)


State 224

  141 term: INT '(' FLOAT_LIT ')' .

    $default  reduce using rule 141 (term)


State 225

  140 term: INT '(' ident ')' .

    $default  reduce using rule 140 (term)


State 226

  143 term: FLOAT '(' INT_LIT ')' .

    $default  reduce using rule 143 (term)


State 227

  142 term: FLOAT '(' ident ')' .

    $default  reduce using rule 142 (term)


State 228

   46 ifelse: IF FLOAT_LIT $@13 '{' $@14 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 250
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 229

   43 ifelse: IF ID $@11 '{' $@12 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 251
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 230

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  138 term: ID $@23 '[' expr . ']'

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    ']'  shift, and go to state 252
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 231

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  124 bool: '!' bool $@22 expr .

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    GEQ       [reduce using rule 124 (bool)]
    LEQ       [reduce using rule 124 (bool)]
    EQL       [reduce using rule 124 (bool)]
    NEQ       [reduce using rule 124 (bool)]
    '+'       [reduce using rule 124 (bool)]
    '%'       [reduce using rule 124 (bool)]
    '-'       [reduce using rule 124 (bool)]
    '>'       [reduce using rule 124 (bool)]
    '<'       [reduce using rule 124 (bool)]
    $default  reduce using rule 124 (bool)

    compare  go to state 112


State 232

  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr
  119 preexpr: '(' expr . ')'

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '+'  shift, and go to state 106
    '%'  shift, and go to state 107
    '-'  shift, and go to state 109
    ')'  shift, and go to state 253
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 112


State 233

   36 ifelse: IF expr '{' $@8 stmts . '}'

    '}'  shift, and go to state 254


State 234

   38 ifelse: ELSE IF expr '{' $@9 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 255
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 235

   40 ifelse: ELSE '{' $@10 stmts '}' .

    $default  reduce using rule 40 (ifelse)


State 236

   26 forloop: FOR const '{' $@2 $@3 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 256
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 237

   29 forloop: FOR const_add '{' $@4 $@5 . stmts '}'

    VAR        shift, and go to state 1
    NEWLINE    shift, and go to state 2
    PRINT      shift, and go to state 3
    PRINTLN    shift, and go to state 4
    IF         shift, and go to state 5
    ELSE       shift, and go to state 6
    FOR        shift, and go to state 7
    FALSE      shift, and go to state 8
    INT_LIT    shift, and go to state 9
    FLOAT_LIT  shift, and go to state 10
    ID         shift, and go to state 11
    '{'        shift, and go to state 12

    $default  reduce using rule 4 (stmts)

    stmts         go to state 257
    stmt          go to state 74
    const_add     go to state 15
    forloop       go to state 16
    ifelse        go to state 17
    error_assign  go to state 18
    setVal        go to state 19
    ident         go to state 20
    block         go to state 21
    Def           go to state 22
    cal           go to state 23
    print         go to state 24


State 238

   33 forloop: FOR forexpr '{' $@7 stmts . '}'

    '}'  shift, and go to state 258


State 239

   34 forexpr: ident assignVal ';' ident . compare ';' cal

    GEQ  shift, and go to state 102
    LEQ  shift, and go to state 103
    EQL  shift, and go to state 104
    NEQ  shift, and go to state 105
    '>'  shift, and go to state 110
    '<'  shift, and go to state 111

    compare  go to state 259


State 240

   31 forloop: FOR expr '{' $@6 stmts . '}'

    '}'  shift, and go to state 260


State 241

   63 var: '"' STRING_LIT '"' .
  115 expr: '"' STRING_LIT '"' .

    NEWLINE   reduce using rule 63 (var)
    NEWLINE   [reduce using rule 115 (expr)]
    ';'       reduce using rule 63 (var)
    ';'       [reduce using rule 115 (expr)]
    $default  reduce using rule 115 (expr)


State 242

   58 setVal: ID '[' INT_LIT $@17 ']' . value_initial

    '='  shift, and go to state 261

    $default  reduce using rule 75 (value_initial)

    value_initial  go to state 262


State 243

   77 block: '{' NEWLINE $@18 stmts '}' . NEWLINE

    NEWLINE  shift, and go to state 263


State 244

   91 INT_initial: '=' INT_LIT NEWLINE .

    $default  reduce using rule 91 (INT_initial)


State 245

   89 FLOAT_initial: '=' FLOAT_LIT NEWLINE .

    $default  reduce using rule 89 (FLOAT_initial)


State 246

   86 BOOL_initial: '=' TRUE NEWLINE .

    $default  reduce using rule 86 (BOOL_initial)


State 247

   87 BOOL_initial: '=' FALSE NEWLINE .

    $default  reduce using rule 87 (BOOL_initial)


State 248

   93 STR_initial: '=' '"' STRING_LIT . '"' NEWLINE

    '"'  shift, and go to state 264


State 249

   83 Def: VAR ID '[' INT_LIT $@19 ']' . typee NEWLINE

    INT    shift, and go to state 265
    FLOAT  shift, and go to state 266

    typee  go to state 267


State 250

   46 ifelse: IF FLOAT_LIT $@13 '{' $@14 stmts . '}'

    '}'  shift, and go to state 268


State 251

   43 ifelse: IF ID $@11 '{' $@12 stmts . '}'

    '}'  shift, and go to state 269


State 252

  138 term: ID $@23 '[' expr ']' .

    $default  reduce using rule 138 (term)


State 253

  119 preexpr: '(' expr ')' .

    $default  reduce using rule 119 (preexpr)


State 254

   36 ifelse: IF expr '{' $@8 stmts '}' .

    $default  reduce using rule 36 (ifelse)


State 255

   38 ifelse: ELSE IF expr '{' $@9 stmts . '}'

    '}'  shift, and go to state 270


State 256

   26 forloop: FOR const '{' $@2 $@3 stmts . '}'

    '}'  shift, and go to state 271


State 257

   29 forloop: FOR const_add '{' $@4 $@5 stmts . '}'

    '}'  shift, and go to state 272


State 258

   33 forloop: FOR forexpr '{' $@7 stmts '}' .

    $default  reduce using rule 33 (forloop)


State 259

   34 forexpr: ident assignVal ';' ident compare . ';' cal

    ';'  shift, and go to state 273


State 260

   31 forloop: FOR expr '{' $@6 stmts '}' .

    $default  reduce using rule 31 (forloop)


State 261

   74 value_initial: '=' . expr NEWLINE

    INT             shift, and go to state 28
    FLOAT           shift, and go to state 29
    LAND            shift, and go to state 30
    LOR             shift, and go to state 31
    TRUE            shift, and go to state 32
    FALSE           shift, and go to state 33
    INT_LIT         shift, and go to state 34
    SIGN_INT_LIT    shift, and go to state 35
    FLOAT_LIT       shift, and go to state 92
    SIGN_FLOAT_LIT  shift, and go to state 37
    ID              shift, and go to state 93
    '"'             shift, and go to state 39
    '('             shift, and go to state 40
    '!'             shift, and go to state 41

    $default  reduce using rule 116 (expr)

    expr     go to state 274
    preexpr  go to state 43
    andor    go to state 44
    bool     go to state 45
    term     go to state 46


State 262

   58 setVal: ID '[' INT_LIT $@17 ']' value_initial .

    $default  reduce using rule 58 (setVal)


State 263

   77 block: '{' NEWLINE $@18 stmts '}' NEWLINE .

    $default  reduce using rule 77 (block)


State 264

   93 STR_initial: '=' '"' STRING_LIT '"' . NEWLINE

    NEWLINE  shift, and go to state 275


State 265

   84 typee: INT .

    $default  reduce using rule 84 (typee)


State 266

   85 typee: FLOAT .

    $default  reduce using rule 85 (typee)


State 267

   83 Def: VAR ID '[' INT_LIT $@19 ']' typee . NEWLINE

    NEWLINE  shift, and go to state 276


State 268

   46 ifelse: IF FLOAT_LIT $@13 '{' $@14 stmts '}' .

    $default  reduce using rule 46 (ifelse)


State 269

   43 ifelse: IF ID $@11 '{' $@12 stmts '}' .

    $default  reduce using rule 43 (ifelse)


State 270

   38 ifelse: ELSE IF expr '{' $@9 stmts '}' .

    $default  reduce using rule 38 (ifelse)


State 271

   26 forloop: FOR const '{' $@2 $@3 stmts '}' .

    $default  reduce using rule 26 (forloop)


State 272

   29 forloop: FOR const_add '{' $@4 $@5 stmts '}' .

    $default  reduce using rule 29 (forloop)


State 273

   34 forexpr: ident assignVal ';' ident compare ';' . cal

    ID  shift, and go to state 277

    ident  go to state 278
    cal    go to state 279


State 274

   74 value_initial: '=' expr . NEWLINE
  106 expr: expr . '+' preexpr
  107     | expr . '-' preexpr
  108     | expr . '%' preexpr
  111     | expr . compare expr

    GEQ      shift, and go to state 102
    LEQ      shift, and go to state 103
    EQL      shift, and go to state 104
    NEQ      shift, and go to state 105
    NEWLINE  shift, and go to state 280
    '+'      shift, and go to state 106
    '%'      shift, and go to state 107
    '-'      shift, and go to state 109
    '>'      shift, and go to state 110
    '<'      shift, and go to state 111

    compare  go to state 112


State 275

   93 STR_initial: '=' '"' STRING_LIT '"' NEWLINE .

    $default  reduce using rule 93 (STR_initial)


State 276

   83 Def: VAR ID '[' INT_LIT $@19 ']' typee NEWLINE .

    $default  reduce using rule 83 (Def)


State 277

   73 ident: ID .
   97 cal: ID . '+' ID
   98    | ID . '-' ID
   99    | ID . '*' ID
  100    | ID . '/' ID
  101    | ID . '%' ID

    '+'  shift, and go to state 281
    '%'  shift, and go to state 282
    '-'  shift, and go to state 68
    '*'  shift, and go to state 69
    '/'  shift, and go to state 70

    $default  reduce using rule 73 (ident)


State 278

   95 cal: ident . INC
   96    | ident . DEC

    INC  shift, and go to state 75
    DEC  shift, and go to state 76


State 279

   34 forexpr: ident assignVal ';' ident compare ';' cal .

    $default  reduce using rule 34 (forexpr)


State 280

   74 value_initial: '=' expr NEWLINE .

    $default  reduce using rule 74 (value_initial)


State 281

   97 cal: ID '+' . ID

    ID  shift, and go to state 138


State 282

  101 cal: ID '%' . ID

    ID  shift, and go to state 140
